import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        String s[] = bf.readLine().trim().split(" ");
	        int n = Integer.parseInt(s[0]);
	        int m = Integer.parseInt(s[1]);
	        
	        s = bf.readLine().trim().split(" ");
	        int arr[][] = new int[n][m];
	        int dis[][] = new int[n][m];
	        boolean vis[][] = new boolean[n][m];
	        Queue<ArrayList<Integer>> q = new LinkedList<ArrayList<Integer>>();
	        
	        for(int i=0 ; i<n ; i++)
	        {
	            for(int j=0 ; j<m ; j++)
	            {
	                arr[i][j] = Integer.parseInt(s[i*m+j]);
	                if(arr[i][j] == 1)
	                {
	                    dis[i][j] = 0;
	                    vis[i][j] = true;
	                    ArrayList<Integer> al = new ArrayList<Integer>();
	                    al.add(i);
	                    al.add(j);
	                    q.add(al);
	                }
	                else
	                    dis[i][j] = -1;
	            }
	        }
	        
	        while(!q.isEmpty())
	        {
	            ArrayList<Integer> al = q.poll();
	            int i = al.get(0);
	            int j = al.get(1);
	            
	            if(j > 0 && !vis[i][j-1] && arr[i][j-1] == 0)
	            {
	                dis[i][j-1] = dis[i][j] + 1;
	                vis[i][j-1] = true;
	                al = new ArrayList<Integer>();
	                al.add(i);
	                al.add(j-1);
	                q.add(al);
	            }
	            if(j < m-1 && !vis[i][j+1] && arr[i][j+1] == 0)
	            {
	                dis[i][j+1] = dis[i][j] + 1;
	                vis[i][j+1] = true;
	                al = new ArrayList<Integer>();
	                al.add(i);
	                al.add(j+1);
	                q.add(al);
	            }
	            if(i > 0 && !vis[i-1][j] && arr[i-1][j] == 0)
	            {
	                dis[i-1][j] = dis[i][j] + 1;
	                vis[i-1][j] = true;
	                al = new ArrayList<Integer>();
	                al.add(i-1);
	                al.add(j);
	                q.add(al);
	            }
	            if(i < n-1 && !vis[i+1][j] && arr[i+1][j] == 0)
	            {
	                dis[i+1][j] = dis[i][j] + 1;
	                vis[i+1][j] = true;
	                al = new ArrayList<Integer>();
	                al.add(i+1);
	                al.add(j);
	                q.add(al);
	            }
	        }
	        StringBuffer sb = new StringBuffer();
	        for(int i=0 ; i<n ; i++)
	            for(int j=0 ; j<m ; j++)
	                sb.append(dis[i][j] + " ");
	         System.out.println(sb);
	    }
	}
}
