import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    static int count(int arr[][], int n)
    {
        int dp[][] = new int[n][n];
        
        for(int i=n-1 ; i>=0 ; i--)
        {
            for(int j=n-1 ; j>=0 ; j--)
            {
                if(i == n-1)
                    dp[i][j] = arr[i][j];
                else if(j == 0)
                    dp[i][j] = arr[i][j] + Math.max(dp[i+1][j], dp[i+1][j+1]);
                else if(j == n-1)
                    dp[i][j] = arr[i][j] + Math.max(dp[i+1][j], dp[i+1][j-1]);
                else
                    dp[i][j] = arr[i][j] + Math.max(dp[i+1][j], Math.max(dp[i+1][j-1], dp[i+1][j+1]));
            }
        }
        
        int max = Integer.MIN_VALUE;
        for(int i=0 ; i<n ; i++)
            if(dp[0][i] > max)
                max = dp[0][i];
                
        return max;
    }
    
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        int n = Integer.parseInt(bf.readLine().trim());
	        
	        String s[] = bf.readLine().trim().split(" ");
	        int arr[][] = new int[n][n];
	        
	        for(int i=0 ; i<n ; i++)
	            for(int j=0 ; j<n ; j++)
	                arr[i][j] = Integer.parseInt(s[i * n + j]);
	           
	        
	        System.out.println(count(arr, n));
	        
	    }
	}
}
