import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    static int dp[][];
    static int LPS(String str, int i, int j)
    {
        if(dp[i][j] != 0)
            return dp[i][j];
        else if(i == j)
            return 1;
        else if(i > j)
            return 0;
        else if(str.charAt(i) == str.charAt(j))
            dp[i][j] = 2 + LPS(str, i+1, j-1);
        else
            dp[i][j] = Math.max(LPS(str, i+1, j), LPS(str, i, j-1));
        
        return dp[i][j];
    }
    
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        String s = bf.readLine().trim();
	        dp = new int[s.length()][s.length()];
	        
	        int len = LPS(s, 0, s.length() - 1);
	        System.out.println(s.length() - len);
	    }
	}
}
