import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    static int count(String str, String rev)
    {
        int n = str.length();
        int dp[][] = new int[n + 1][n + 1];
        
        for(int i=0 ; i<=str.length() ; i++)
        {
            for(int j=0 ; j<=rev.length() ; j++)
            {
                if(i == 0 || j == 0)
                    dp[i][j] = 0;
                else if(str.charAt(i-1) == rev.charAt(j-1))
                    dp[i][j] = dp[i-1][j-1] + 1;
                else
                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
            }
        }
        
        return dp[n][n];
    }
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        String str = bf.readLine().trim();
	        int n = str.length();
	        StringBuffer sb = new StringBuffer(str);
	        sb.reverse();
	        
	        System.out.println(n - count(str, sb.toString()));
	    }
	}
}
