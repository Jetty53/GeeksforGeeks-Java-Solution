import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    static int maxGold(int arr[][], int n, int m)
    {
        int dp[][] = new int[n][m];
        
        for(int col=m-1 ; col>=0 ; col--)
        {
            for(int row=0 ; row < n ; row++)
            {
                int right = col == m-1 ? 0 : dp[row][col + 1];
                
                int right_up = col == m-1 || row == 0 ? 0 : dp[row - 1][col + 1];
                
                int right_down = col == m-1 || row == n-1 ? 0 : dp[row + 1][col + 1];
                
                dp[row][col] = arr[row][col] + Math.max(right, Math.max(right_up, right_down));
            }
        }
        
        int max = Integer.MIN_VALUE;
        for(int row=0 ; row < n ; row++)
            if(dp[row][0] > max)
                max = dp[row][0];
                
        return max;
    }
    
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        String s[] = bf.readLine().trim().split(" ");
	        int n = Integer.parseInt(s[0]);
	        int m = Integer.parseInt(s[1]);
	        int arr[][] = new int[n][m];
	        
	        s = bf.readLine().trim().split(" ");
	        
	        for(int i=0 ; i<n ; i++)
	            for(int j=0 ; j<m ; j++)
	                arr[i][j] = Integer.parseInt(s[i * m + j]);
	                
	        System.out.println(maxGold(arr, n, m));
	    }
	}
}
