import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    static void swap(int arr[], int i, int j)
    {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    static int partition(int arr[], int left, int right, int pivot)
    {
        int i = left;
        int pivotElement = arr[pivot];
        swap(arr, pivot, right);
        
        for(int j=left ; j<right ; j++)
        {
            if(arr[j] < pivotElement)
            {
                swap(arr, i, j);
                i++;
            }
        }
        swap(arr, right, i);
        return i;
    }

    static int quickSelect(int arr[], int k)
    {
        int left = 0;
        int right = arr.length - 1;
        Random r = new Random(0);
        
        while(left <= right)
        {
            int pivotIndex = r.nextInt(right - left + 1) + left;
            int finalPivotIndex = partition(arr, left, right, pivotIndex);
            
            if(finalPivotIndex == k-1)
                return arr[finalPivotIndex];
            else if(finalPivotIndex > k-1)
                right = finalPivotIndex - 1;
            else
                left = finalPivotIndex + 1;
        }
        return -1;
    }
    
	public static void main (String[] args) throws Exception
	{
	    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(bf.readLine().trim());
	    while(t-- > 0)
	    {
	        int n = Integer.parseInt(bf.readLine().trim());
	        String s[] = bf.readLine().trim().split(" ");
	        int arr[] = new int[n];
	        
	        for(int i=0 ; i<n ; i++)
	            arr[i] = Integer.parseInt(s[i]);
	        
	        int k = Integer.parseInt(bf.readLine());
	        System.out.println(quickSelect(arr, k));
	    }
	}
}
